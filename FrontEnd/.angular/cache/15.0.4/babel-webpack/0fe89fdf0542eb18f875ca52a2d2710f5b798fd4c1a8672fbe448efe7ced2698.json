{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BackEndServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  GetweatherData() {\n    return this.http.get('https://localhost:44350/weatherforecast/viewforecast');\n  }\n  insertuserdata(data) {\n    this.http.post('https://localhost:44350/api/User/insertuser', data).toPromise().then(result => {\n      alert(\"Registration done Successfully!\"), window.location.href = '/Home/Login';\n    });\n  }\n  getUserdata() {\n    return this.http.get('https://localhost:44350/api/User/viewuser');\n  }\n  getconfirmeduserdata() {\n    return this.http.get('https://localhost:44350/api/User/viewconfirmeduser');\n  }\n  insertproductdata(data) {\n    this.http.post('https://localhost:44350/api/Product/insertproduct', data).toPromise().then(result => {\n      alert(\"Product Registered Successfully!\"), window.location.href = '/adminhome/viewproduct';\n    });\n  }\n  getproductdata() {\n    return this.http.get('https://localhost:44350/api/Product/viewproduct');\n  }\n  getproductbaseid(productid) {\n    return this.http.get('https://localhost:44350/api/Product/ViewProductByid/' + productid);\n  }\n  updateproductdata(productid) {\n    this.http.post('https://localhost:44350/api/Product/updateproduct', productid).toPromise().then(result => {\n      alert(\"Product Details Updated Successfully!\"), window.location.href = '/adminhome/viewproduct';\n    });\n  }\n  deleteproductdata(productid) {\n    this.http.post('https://localhost:44350/api/Product/deleteproduct', productid).toPromise().then(result => {\n      alert(\"Product Deleted!\"), window.location.href = '/adminhome/viewproduct';\n    });\n  }\n  confirmuser(loginId) {\n    this.http.post('https://localhost:44350/api/User/confirmuser', loginId).toPromise().then(result => {\n      alert(\"User Confirmed Successfully!\"), window.location.href = '/adminhome/viewuser';\n    });\n  }\n  removeuser(loginId) {\n    this.http.post('https://localhost:44350/api/User/removeuser', loginId).toPromise().then(result => {\n      alert(\"User Removed!\"), window.location.href = '/adminhome/viewuser';\n    });\n  }\n  login(loginInfo) {\n    return this.http.post(\"https://localhost:44350/api/User/login\", {\n      UserName: loginInfo[0],\n      Password: loginInfo[1]\n    }, {\n      responseType: 'text'\n    });\n  }\n  insertcomplaintdata(data) {\n    this.http.post('https://localhost:44350/api/NewComplaint/insertnewcomplaint', data).toPromise().then(result => {\n      alert(\"Your Complaint Has Been Registered Successfully!\"), window.location.href = '/userhome/viewcomplaintstatus';\n    });\n  }\n  getcomplaintsdata() {\n    return this.http.get('https://localhost:44350/api/User/getcomplaints');\n  }\n  getpendingcomplaints() {\n    return this.http.get('https://localhost:44350/api/User/getpendingcomplaints');\n  }\n  getcompletedcomplaints() {\n    return this.http.get('https://localhost:44350/api/User/getcompletedcomplaints');\n  }\n  getcomplaintstatus(id) {\n    return this.http.get('https://localhost:44350/api/NewComplaint/getstatuscomplaint/' + id);\n  }\n  statuspending(complaintId) {\n    this.http.post('https://localhost:44350/api/NewComplaint/updatestatuspending', complaintId).toPromise().then(result => {\n      alert(\"Complaint Status Changed to Pending!\"), window.location.href = '/adminhome/viewcomplaints';\n    });\n  }\n  statuscompleted(complaintId) {\n    this.http.post('https://localhost:44350/api/NewComplaint/updatestatuscompleted', complaintId).toPromise().then(result => {\n      alert(\"Complaint Status Changed to Completed!\"), window.location.href = '/adminhome/completedcomplaints';\n    });\n  }\n}\nBackEndServiceService.ɵfac = function BackEndServiceService_Factory(t) {\n  return new (t || BackEndServiceService)(i0.ɵɵinject(i1.HttpClient));\n};\nBackEndServiceService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: BackEndServiceService,\n  factory: BackEndServiceService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BackEndServiceService","constructor","http","GetweatherData","get","insertuserdata","data","post","toPromise","then","result","alert","window","location","href","getUserdata","getconfirmeduserdata","insertproductdata","getproductdata","getproductbaseid","productid","updateproductdata","deleteproductdata","confirmuser","loginId","removeuser","login","loginInfo","UserName","Password","responseType","insertcomplaintdata","getcomplaintsdata","getpendingcomplaints","getcompletedcomplaints","getcomplaintstatus","id","statuspending","complaintId","statuscompleted","factory","providedIn"],"sourceRoot":"","sources":["D:\\PROJECT\\ComplaintBox\\FrontEnd\\src\\app\\back-end-service.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class BackEndServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  GetweatherData() {\n    return this.http.get<any>('https://localhost:44350/weatherforecast/viewforecast')\n  }\n\n  insertuserdata(data: any) {\n    this.http.post('https://localhost:44350/api/User/insertuser', data).toPromise().then(result => { alert(\"Registration done Successfully!\"),window.location.href='/Home/Login' })\n  }\n\n  getUserdata() {\n    return this.http.get<any>('https://localhost:44350/api/User/viewuser')\n  }\n\n  getconfirmeduserdata(){\n    return this.http.get<any>('https://localhost:44350/api/User/viewconfirmeduser')\n  }\n\n  insertproductdata(data: any) {\n    this.http.post('https://localhost:44350/api/Product/insertproduct', data).toPromise().then(result => { alert(\"Product Registered Successfully!\"),window.location.href='/adminhome/viewproduct' })\n  }\n\n  getproductdata() {\n    return this.http.get<any>('https://localhost:44350/api/Product/viewproduct')\n  }\n\n  getproductbaseid(productid: any) {\n    return this.http.get<any>('https://localhost:44350/api/Product/ViewProductByid/' + productid)\n  }\n\n  updateproductdata(productid: any) {\n    this.http.post('https://localhost:44350/api/Product/updateproduct', productid).toPromise().then(result => { alert(\"Product Details Updated Successfully!\"),window.location.href='/adminhome/viewproduct' })\n  }\n\n  deleteproductdata(productid: any) {\n    this.http.post('https://localhost:44350/api/Product/deleteproduct', productid).toPromise().then(result => { alert(\"Product Deleted!\"),window.location.href='/adminhome/viewproduct' })\n  }\n\n  confirmuser(loginId: any) {\n    this.http.post('https://localhost:44350/api/User/confirmuser', loginId).toPromise().then(result => { alert(\"User Confirmed Successfully!\"),window.location.href='/adminhome/viewuser' })\n  }\n\n  removeuser(loginId:any){\n    this.http.post('https://localhost:44350/api/User/removeuser', loginId).toPromise().then(result => { alert(\"User Removed!\"),window.location.href='/adminhome/viewuser' })\n \n  }\n\n  login(loginInfo: Array<string>) {\n    return this.http.post(\"https://localhost:44350/api/User/login\", {\n      UserName: loginInfo[0],\n      Password: loginInfo[1],\n\n    },\n      {\n        responseType: 'text',\n      }\n    );\n  }\n\n  insertcomplaintdata(data:any)\n  {\n    this.http.post('https://localhost:44350/api/NewComplaint/insertnewcomplaint',data).toPromise().then(result=>{alert(\"Your Complaint Has Been Registered Successfully!\"),window.location.href='/userhome/viewcomplaintstatus'})\n  }\n\n  getcomplaintsdata()\n  {\n    return this.http.get<any>('https://localhost:44350/api/User/getcomplaints')\n  }\n\n  getpendingcomplaints()\n  {\n    return this.http.get<any>('https://localhost:44350/api/User/getpendingcomplaints')\n  }\n\n  getcompletedcomplaints()\n  {\n    return this.http.get<any>('https://localhost:44350/api/User/getcompletedcomplaints')\n  }\n\n  getcomplaintstatus(id: any) {\n    return this.http.get<any>('https://localhost:44350/api/NewComplaint/getstatuscomplaint/'+id)\n  }\n\n  statuspending(complaintId:any){\n    this.http.post('https://localhost:44350/api/NewComplaint/updatestatuspending',complaintId).toPromise().then(result=>{alert(\"Complaint Status Changed to Pending!\"),window.location.href='/adminhome/viewcomplaints'})\n  }\n\n  statuscompleted(complaintId:any){\n    this.http.post('https://localhost:44350/api/NewComplaint/updatestatuscompleted',complaintId).toPromise().then(result=>{ alert(\"Complaint Status Changed to Completed!\"),window.location.href='/adminhome/completedcomplaints'})\n \n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}