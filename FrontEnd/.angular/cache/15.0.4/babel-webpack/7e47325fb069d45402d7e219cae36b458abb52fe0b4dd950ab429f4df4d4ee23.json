{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/back-end-service.service\";\nimport * as i2 from \"@angular/common\";\nfunction ConfirmedusersComponent_tr_22_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 4)(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"td\")(14, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ConfirmedusersComponent_tr_22_Template_button_click_14_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.remove(item_r1.loginId, item_r1.name, item_r1.place, item_r1.email, item_r1.phone, item_r1.username, item_r1.password));\n    });\n    i0.ɵɵtext(15, \"Remove\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.name, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", item_r1.place, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.phone);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.username);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.status);\n  }\n}\nexport class ConfirmedusersComponent {\n  constructor(backendservice) {\n    this.backendservice = backendservice;\n    this.Dataarray = [];\n  }\n  ngOnInit() {\n    this.backendservice.getconfirmeduserdata().subscribe(res => {\n      this.Dataarray = res;\n    });\n  }\n  remove(id, name, place, email, phone, username, password) {\n    console.log(id);\n    this.backendservice.removeuser({\n      loginId: id,\n      name: name,\n      place: place,\n      email: email,\n      phone: phone,\n      username: username,\n      password: password,\n      status: 'NotConfirmed'\n    });\n  }\n}\nConfirmedusersComponent.ɵfac = function ConfirmedusersComponent_Factory(t) {\n  return new (t || ConfirmedusersComponent)(i0.ɵɵdirectiveInject(i1.BackEndServiceService));\n};\nConfirmedusersComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ConfirmedusersComponent,\n  selectors: [[\"app-confirmedusers\"]],\n  decls: 23,\n  vars: 1,\n  consts: [[2, \"text-align\", \"center\"], [1, \"container\", \"mt-3\"], [1, \"table\"], [\"class\", \"table-primary\", 4, \"ngFor\", \"ngForOf\"], [1, \"table-primary\"], [1, \"btn\", \"btn-danger\", 3, \"click\"]],\n  template: function ConfirmedusersComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Confirmed Users\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"div\", 1)(3, \"h1\");\n      i0.ɵɵtext(4, \"User Details\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"br\");\n      i0.ɵɵelementStart(6, \"table\", 2)(7, \"thead\")(8, \"th\");\n      i0.ɵɵtext(9, \" Name \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"th\");\n      i0.ɵɵtext(11, \" Place \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"th\");\n      i0.ɵɵtext(13, \" Email \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"th\");\n      i0.ɵɵtext(15, \"Phone\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"th\");\n      i0.ɵɵtext(17, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"th\");\n      i0.ɵɵtext(19, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"th\");\n      i0.ɵɵtext(21, \"Remove User\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(22, ConfirmedusersComponent_tr_22_Template, 16, 6, \"tr\", 3);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(22);\n      i0.ɵɵproperty(\"ngForOf\", ctx.Dataarray);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;;;IAcQA,6BAAqE;IAE5DA,YAAa;IAAAA,iBAAK;IACvBA,0BAAI;IAACA,YAAe;IAAAA,iBAAK;IACzBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,YAAc;IAAAA,iBAAK;IACvBA,0BAAI;IAAAA,aAAiB;IAAAA,iBAAK;IAE1BA,2BAAI;IAAAA,aAAe;IAAAA,iBAAK;IACxBA,2BAAI;IAA+BA;MAAA;MAAA;MAAA;MAAA,OAASA,4IAA2F;IAAA,EAAC;IAACA,uBAAM;IAAAA,iBAAS;;;;IAPnJA,eAAa;IAAbA,4CAAa;IACbA,eAAe;IAAfA,8CAAe;IAChBA,eAAc;IAAdA,mCAAc;IACdA,eAAc;IAAdA,mCAAc;IACdA,eAAiB;IAAjBA,sCAAiB;IAEjBA,eAAe;IAAfA,oCAAe;;;ACd/B,OAAM,MAAOC,uBAAuB;EAElCC,YAAoBC,cAAoC;IAApC,mBAAc,GAAdA,cAAc;IAElC,cAAS,GAAU,EAAE;EAFqC;EAI1DC,QAAQ;IACN,IAAI,CAACD,cAAc,CAACE,oBAAoB,EAAE,CAACC,SAAS,CAAEC,GAAG,IAAG;MAC1D,IAAI,CAACC,SAAS,GAACD,GAAG;IACpB,CAAC,CAAC;EAGJ;EAGAE,MAAM,CAACC,EAAM,EAACC,IAAQ,EAACC,KAAS,EAACC,KAAS,EAACC,KAAS,EAACC,QAAY,EAACC,QAAY;IAC5EC,OAAO,CAACC,GAAG,CAACR,EAAE,CAAC;IACf,IAAI,CAACP,cAAc,CAACgB,UAAU,CAAC;MAACC,OAAO,EAACV,EAAE;MAACC,IAAI,EAACA,IAAI;MAACC,KAAK,EAACA,KAAK;MAACC,KAAK,EAACA,KAAK;MAACC,KAAK,EAACA,KAAK;MAACC,QAAQ,EAACA,QAAQ;MAACC,QAAQ,EAACA,QAAQ;MAACK,MAAM,EAAC;IAAc,CAAC,CAAC;EACtJ;;AAlBWpB,uBAAuB;mBAAvBA,uBAAuB;AAAA;AAAvBA,uBAAuB;QAAvBA,uBAAuB;EAAAqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDRpC1B,6BAAgC;MAAAA,+BAAe;MAAAA,iBAAK;MACpDA,8BAA4B;MACpBA,4BAAY;MAAAA,iBAAK;MAAAA,qBAAI;MACzBA,gCAAqB;MAERA,sBAAK;MAAAA,iBAAK;MACfA,2BAAI;MAACA,wBAAM;MAAAA,iBAAK;MAChBA,2BAAI;MAACA,wBAAM;MAAAA,iBAAK;MAChBA,2BAAI;MAAAA,sBAAK;MAAAA,iBAAK;MACdA,2BAAI;MAAAA,yBAAQ;MAAAA,iBAAK;MAEjBA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MACfA,2BAAI;MAAAA,4BAAW;MAAAA,iBAAK;MAExBA,yEAaK;MACTA,iBAAQ;;;MAdiBA,gBAAa;MAAbA,uCAAa","names":["i0","ConfirmedusersComponent","constructor","backendservice","ngOnInit","getconfirmeduserdata","subscribe","res","Dataarray","remove","id","name","place","email","phone","username","password","console","log","removeuser","loginId","status","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["D:\\PROJECT\\ComplaintBox\\FrontEnd\\src\\app\\admin\\confirmedusers\\confirmedusers.component.html","D:\\PROJECT\\ComplaintBox\\FrontEnd\\src\\app\\admin\\confirmedusers\\confirmedusers.component.ts"],"sourcesContent":["<h1 style=\"text-align: center;\">Confirmed Users</h1>\n<div class=\"container mt-3\">\n    <h1>User Details</h1><br>\n    <table class=\"table\">\n        <thead>\n            <th> Name </th>\n            <th> Place </th>\n            <th> Email </th>\n            <th>Phone</th>\n            <th>Username</th>\n            \n            <th>Status</th>\n            <th>Remove User</th>\n        </thead>\n        <tr *ngFor=\"let item of Dataarray let i=index\" class=\"table-primary\">\n            \n            <td> {{item.name}}</td>\n            <td> {{item.place}} </td>\n            <td>{{item.email}}</td>\n            <td>{{item.phone}}</td>\n            <td>{{item.username}}</td>\n           \n            <td>{{item.status}}</td>\n            <td><button class=\"btn btn-danger\" (click)=\"remove(item.loginId,item.name,item.place,item.email,item.phone,item.username,item.password)\">Remove</button></td>\n           \n            <!-- <td><button class=\"btn btn-primary\" (click)=\"confirm(item.loginId,item.name,item.place,item.email,item.phone,item.username,item.password)\">Confirm</button></td>\n            <td></td> -->\n        </tr>\n    </table>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BackEndServiceService } from 'src/app/back-end-service.service';\n\n@Component({\n  selector: 'app-confirmedusers',\n  templateUrl: './confirmedusers.component.html',\n  styleUrls: ['./confirmedusers.component.scss']\n})\nexport class ConfirmedusersComponent implements OnInit {\n\n  constructor(private backendservice:BackEndServiceService){}\n\n  Dataarray: any[] = [];\n\n  ngOnInit():void{\n    this.backendservice.getconfirmeduserdata().subscribe((res)=>{\n      this.Dataarray=res;\n    })\n\n   \n  }\n\n\n  remove(id:any,name:any,place:any,email:any,phone:any,username:any,password:any){\n    console.log(id);\n    this.backendservice.removeuser({loginId:id,name:name,place:place,email:email,phone:phone,username:username,password:password,status:'NotConfirmed'})\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}