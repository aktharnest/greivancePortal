{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"../back-end-service.service\";\n//import { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\n// @Injectable()\n// export class MyService {\n//   constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {}\n// }\nexport class LoginComponent {\n  constructor(fb, router, backendservice) {\n    this.fb = fb;\n    this.router = router;\n    this.backendservice = backendservice;\n    this.Loginstatus = false;\n    this.isUserValid = false;\n    this.LoginFormGroup = this.fb.group({\n      username: [''],\n      password: ['']\n    });\n  }\n  OnSubmit() {\n    if (this.LoginFormGroup.value.username == 'Admin' && this.LoginFormGroup.value.password == 'Admin') {\n      this.router.navigate(['adminhome']);\n    } else {\n      //this.Loginstatus=true;\n      this.backendservice.login([this.LoginFormGroup.value.username, this.LoginFormGroup.value.password]).subscribe(res => {\n        //console.log(res);\n        console.log(this.LoginFormGroup.value.username);\n        if (res == 'Failed') {\n          this.isUserValid = false;\n          alert('Login Unsuccessful');\n        } else {\n          this.isUserValid = true;\n          //console.log(res)\n          let obj = JSON.parse(res);\n          this.sess = obj.loginId;\n          // this.sess=res.charAt(11);\n          // console.log(this.sess);\n          localStorage.setItem('id', this.sess);\n          alert(\"Login Success\");\n          this.router.navigate(['userhome']);\n        }\n      });\n    }\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.BackEndServiceService));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 0,\n  vars: 0,\n  template: function LoginComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAKA;AAIA;AACA;AACA;AACA;AAOA,OAAM,MAAOA,cAAc;EAKzBC,YAAoBC,EAAe,EAAUC,MAAc,EAAUC,cAAqC;IAAtF,OAAE,GAAFF,EAAE;IAAuB,WAAM,GAANC,MAAM;IAAkB,mBAAc,GAAdC,cAAc;IAH5E,gBAAW,GAAG,KAAK;IAC1B,gBAAW,GAAY,KAAK;IAG1B,IAAI,CAACC,cAAc,GAAG,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;MAClCC,QAAQ,EAAE,CAAC,EAAE,CAAC;MACdC,QAAQ,EAAE,CAAC,EAAE;KACd,CAAC;EACJ;EAIAC,QAAQ;IACN,IAAI,IAAI,CAACJ,cAAc,CAACK,KAAK,CAACH,QAAQ,IAAI,OAAO,IAAI,IAAI,CAACF,cAAc,CAACK,KAAK,CAACF,QAAQ,IAAI,OAAO,EAAE;MAClG,IAAI,CAACL,MAAM,CAACQ,QAAQ,CAAC,CAAC,WAAW,CAAC,CAAC;KACpC,MACI;MACH;MACA,IAAI,CAACP,cAAc,CAACQ,KAAK,CAAC,CAAC,IAAI,CAACP,cAAc,CAACK,KAAK,CAACH,QAAQ,EAC7D,IAAI,CAACF,cAAc,CAACK,KAAK,CAACF,QAAQ,CAAC,CAAC,CAACK,SAAS,CAACC,GAAG,IAAG;QACnD;QACAC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACX,cAAc,CAACK,KAAK,CAACH,QAAQ,CAAC;QAC/C,IAAIO,GAAG,IAAI,QAAQ,EAAE;UACnB,IAAI,CAACG,WAAW,GAAG,KAAK;UACxBC,KAAK,CAAC,oBAAoB,CAAC;SAC5B,MAAM;UACL,IAAI,CAACD,WAAW,GAAG,IAAI;UACvB;UAEA,IAAIE,GAAG,GAACC,IAAI,CAACC,KAAK,CAACP,GAAG,CAAC;UACvB,IAAI,CAACQ,IAAI,GAACH,GAAG,CAACI,OAAO;UACrB;UACA;UACAC,YAAY,CAACC,OAAO,CAAC,IAAI,EAAC,IAAI,CAACH,IAAI,CAAC;UACpCJ,KAAK,CAAC,eAAe,CAAC;UACtB,IAAI,CAACf,MAAM,CAACQ,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;;MAEtC,CAAC,CAAC;;EAEN;;AAzCWX,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAA0B;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["LoginComponent","constructor","fb","router","backendservice","LoginFormGroup","group","username","password","OnSubmit","value","navigate","login","subscribe","res","console","log","isUserValid","alert","obj","JSON","parse","sess","loginId","localStorage","setItem","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["D:\\PROJECT\\ComplaintBox\\FrontEnd\\src\\app\\login\\login.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { BackEndServiceService } from '../back-end-service.service';\nimport { Inject,Injectable } from '@angular/core';\n//import { LOCAL_STORAGE, StorageService } from 'ngx-webstorage-service';\n\n \n\n// @Injectable()\n// export class MyService {\n//   constructor(@Inject(LOCAL_STORAGE) private storage: StorageService) {}\n// }\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent {\nsess:any;\n  public Loginstatus = false;\n  isUserValid: boolean = false;\n  LoginFormGroup: FormGroup;\n  constructor(private fb: FormBuilder, private router: Router, private backendservice: BackEndServiceService) {\n    this.LoginFormGroup = this.fb.group({\n      username: [''],\n      password: ['']\n    })\n  }\n\n\n\n  OnSubmit() {\n    if (this.LoginFormGroup.value.username == 'Admin' && this.LoginFormGroup.value.password == 'Admin') {\n      this.router.navigate(['adminhome'])\n    }\n    else {\n      //this.Loginstatus=true;\n      this.backendservice.login([this.LoginFormGroup.value.username,\n      this.LoginFormGroup.value.password]).subscribe(res => {\n        //console.log(res);\n        console.log(this.LoginFormGroup.value.username)\n        if (res == 'Failed') {\n          this.isUserValid = false;\n          alert('Login Unsuccessful');\n        } else {\n          this.isUserValid = true;\n          //console.log(res)\n          \n          let obj=JSON.parse(res);\n          this.sess=obj.loginId;\n          // this.sess=res.charAt(11);\n          // console.log(this.sess);\n          localStorage.setItem('id',this.sess);\n          alert(\"Login Success\");\n          this.router.navigate(['userhome'])\n        }\n      });\n    }\n  }\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}